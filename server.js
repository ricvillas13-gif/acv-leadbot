import express from "express";
import bodyParser from "body-parser";
import { google } from "googleapis";

const app = express();
app.use(bodyParser.urlencoded({ extended: true }));

// ===================================================
// üîê CONFIGURACI√ìN
// ===================================================
const SHEET_ID = process.env.SHEET_ID;
const SHEET_NAME = "Leads";

const auth = new google.auth.GoogleAuth({
  credentials: JSON.parse(process.env.GOOGLE_SERVICE_KEY),
  scopes: ["https://www.googleapis.com/auth/spreadsheets"],
});
const sheets = google.sheets({ version: "v4", auth });

// ===================================================
// üìã CAT√ÅLOGOS
// ===================================================
const GARANTIAS = ["Auto", "Inmueble", "Maquinaria", "Reloj"];
const PROCEDENCIAS = [
  "Referido", "Anuncio en l√≠nea", "Evento", "B√∫squeda org√°nica",
  "Publicidad Facebook", "Publicidad Instagram", "Campa√±a WhatsApp",
  "Formulario Facebook", "Campa√±a Messenger", "Ninguno"
];
const ESTADOS = [
  "Aguascalientes","Baja California","Baja California Sur","Campeche","Chiapas","Chihuahua","CDMX","Coahuila",
  "Colima","Durango","Edo. Mex","Guanajuato","Guerrero","Hidalgo","Jalisco","Michoac√°n","Morelos","Nayarit",
  "Nuevo Le√≥n","Oaxaca","Puebla","Quer√©taro","Quintana Roo","San Luis Potos√≠","Sinaloa","Sonora",
  "Tabasco","Tamaulipas","Tlaxcala","Veracruz","Yucat√°n","Zacatecas"
];
const LUGARES = ["Corporativo", "Patio de Resguardo 1", "Patio de Resguardo 2"];
const ESTATUS = [
  "Cr√©dito activado", "Cr√©dito rechazado", "Cr√©dito inconcluso",
  "Sin respuesta del solicitante", "En espera del solicitante", "Otro"
];

// ===================================================
// ‚öôÔ∏è FUNCIONES AUXILIARES
// ===================================================
function twimlResponse(text) {
  return `<Response><Message>${text}</Message></Response>`;
}

async function appendRow(data) {
  try {
    await sheets.spreadsheets.values.append({
      spreadsheetId: SHEET_ID,
      range: `${SHEET_NAME}!A1`,
      valueInputOption: "USER_ENTERED",
      requestBody: { values: [data] },
    });
  } catch (err) {
    console.error("‚ùå Error escribiendo en la hoja:", err);
  }
}

// ===================================================
// ü§ñ FLUJO DEL CHATBOT
// ===================================================
let tempLeads = {}; // para mantener el estado temporal por n√∫mero

app.post("/", async (req, res) => {
  const from = req.body.From || "";
  const body = (req.body.Body || "").trim();
  const mediaCount = parseInt(req.body.NumMedia || "0");
  const now = new Date().toLocaleString("es-MX");

  console.log("üì©", from, "‚Üí", body);

  // Crear registro temporal si no existe
  if (!tempLeads[from]) {
    tempLeads[from] = {
      fecha: now,
      cliente: "",
      garantia: "",
      monto: "",
      procedencia: "",
      ubicacion: "",
      cita: "",
      lugar: "",
      responsable: "Bot ACV",
      resultado: "",
      fotos: [],
      etapa: "Contacto inicial",
    };
  }
  const lead = tempLeads[from];

  // === 1Ô∏è‚É£ Nombre ===
  if (!lead.cliente) {
    lead.cliente = body;
    res.type("text/xml").send(
      twimlResponse(`Gracias, ${lead.cliente}. ¬øQu√© bien podr√≠as dejar como garant√≠a? (${GARANTIAS.join(", ")})`)
    );
    return;
  }

  // === 2Ô∏è‚É£ Garant√≠a ===
  if (!lead.garantia && GARANTIAS.some(g => body.toLowerCase().includes(g.toLowerCase()))) {
    lead.garantia = GARANTIAS.find(g => body.toLowerCase().includes(g.toLowerCase()));
    res.type("text/xml").send(twimlResponse("Perfecto üëç ¬øCu√°l es el monto que deseas solicitar?"));
    return;
  }

  // === 3Ô∏è‚É£ Monto ===
  if (!lead.monto && /[\$]?\s*\d+/.test(body)) {
    lead.monto = body;
    res.type("text/xml").send(twimlResponse(`Gracias üí∞ ¬øC√≥mo conociste ACV? (${PROCEDENCIAS.join(", ")})`));
    return;
  }

  // === 4Ô∏è‚É£ Procedencia ===
  if (!lead.procedencia && PROCEDENCIAS.some(p => body.toLowerCase().includes(p.toLowerCase()))) {
    lead.procedencia = PROCEDENCIAS.find(p => body.toLowerCase().includes(p.toLowerCase()));
    res.type("text/xml").send(twimlResponse(`Perfecto. ¬øEn qu√© estado te encuentras? (${ESTADOS.slice(0,6).join(", ")}...)`));
    return;
  }

  // === 5Ô∏è‚É£ Ubicaci√≥n ===
  if (!lead.ubicacion && ESTADOS.some(e => body.toLowerCase().includes(e.toLowerCase()))) {
    lead.ubicacion = ESTADOS.find(e => body.toLowerCase().includes(e.toLowerCase()));
    res.type("text/xml").send(twimlResponse("Excelente üåé. Por favor env√≠ame 3 fotos del bien que dejar√≠as en garant√≠a."));
    return;
  }

  // === 6Ô∏è‚É£ Fotos ===
  if (mediaCount > 0) {
    for (let i = 0; i < mediaCount; i++) {
      lead.fotos.push(req.body[`MediaUrl${i}`]);
    }
    if (lead.fotos.length < 3) {
      res.type("text/xml").send(twimlResponse(`Recibida ${lead.fotos.length} foto(s). Faltan ${3 - lead.fotos.length} m√°s üì∏`));
      return;
    } else {
      res.type("text/xml").send(twimlResponse("Perfecto üëç ¬øDeseas proponer una fecha y hora para una cita con un asesor?"));
      return;
    }
  }

  // === 7Ô∏è‚É£ Cita ===
  if (!lead.cita && /\d{1,2}\/\d{1,2}|\d{1,2}\s*(am|pm)/i.test(body)) {
    lead.cita = body;
    res.type("text/xml").send(twimlResponse(`Gracias üóìÔ∏è. ¬øD√≥nde te gustar√≠a la cita? (${LUGARES.join(", ")})`));
    return;
  }

  // === 8Ô∏è‚É£ Lugar ===
  if (!lead.lugar && LUGARES.some(l => body.toLowerCase().includes(l.toLowerCase()))) {
    lead.lugar = LUGARES.find(l => body.toLowerCase().includes(l.toLowerCase()));
    lead.resultado = "En espera del solicitante"; // por defecto
    lead.etapa = "Calificaci√≥n";

    // Registrar en Sheets
    await appendRow([
      lead.fecha, lead.cliente, lead.garantia, lead.monto, "",
      lead.procedencia, lead.ubicacion, lead.etapa, lead.cita, lead.lugar,
      lead.responsable, lead.resultado, "", lead.fotos.join(", ")
    ]);

    res.type("text/xml").send(
      twimlResponse(`Gracias ${lead.cliente} üôè. Hemos registrado tu informaci√≥n. Un asesor se pondr√° en contacto contigo pronto.`)
    );
    delete tempLeads[from];
    return;
  }

  // === Default ===
  res.type("text/xml").send(twimlResponse("Disculpa, no entend√≠ bien ü§î. ¬øPodr√≠as repetirlo?"));
});

// ===================================================
// üöÄ SERVIDOR
// ===================================================
const PORT = process.env.PORT || 10000;
app.listen(PORT, () => console.log(`üöÄ LeadBot ACV final operativo en puerto ${PORT}`));
